{"version":3,"sources":["utils/firebase.js","helpers/functions.js","components/RecipeCard.js","App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","reference","firestore","collection","addItems","id","field","items","doc","update","FieldValue","arrayUnion","removeItems","arrayRemove","Card","docID","title","imgSrc","author","description","timestamp","hasMade","notes","tags","url","useState","tagsToAdd","setTagsToAdd","notesToAdd","setNotesToAdd","isEditing","setIsEditing","add","e","preventDefault","newTags","length","split","forEach","tag","note","remove","itemToRemove","target","closest","textContent","slice","className","src","trigger","modal","close","onClick","delete","type","name","value","onChange","console","log","checked","htmlFor","boolean","lines","more","less","anchorClass","expanded","width","onSubmit","placeholder","rows","map","i","href","moment","format","App","allRecipes","setAllRecipes","filteredRecipes","setFilteredRecipes","sortBy","setSortBy","query","setQuery","useEffect","unsubscribe","recipesRef","orderBy","sortOptions","column","direction","onSnapshot","snapshot","newRecipes","docs","data","searchAllRegex","RegExp","result","filter","recipe","test","alt","currentTarget","columnsCountBreakPoints","300","500","750","900","gutter","RecipeCard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5257d6c.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\n// Firebase Config\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD9SrA01N_4vLdkCLrddWlCGQl_ylIszaI\",\r\n    authDomain: \"dog-ear-recipe-extension-4bfbf.firebaseapp.com\",\r\n    databaseURL: \"https://dog-ear-recipe-extension-4bfbf.firebaseio.com\",\r\n    projectId: \"dog-ear-recipe-extension-4bfbf\",\r\n    storageBucket: \"dog-ear-recipe-extension-4bfbf.appspot.com\",\r\n    messagingSenderId: \"147277096133\",\r\n    appId: \"1:147277096133:web:6e74a347d42254b231bcac\",\r\n    measurementId: \"G-5GEY75XZWH\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import firebase from \"../utils/firebase\";\r\n\r\nconst reference = firebase\r\n    .firestore()\r\n    .collection(\"recipes\")\r\n\r\nexport function create(args) {\r\n    reference\r\n        .add(...args)\r\n}\r\n\r\nexport function deleteEntry(id) {\r\n    reference\r\n        .doc(id)\r\n        .delete()\r\n}\r\n\r\nexport function addItems(id, field, items) {\r\n    switch (field) {\r\n        case \"tags\":\r\n            reference\r\n                .doc(id)\r\n                .update({\r\n                    \"tags\": firebase.firestore.FieldValue.arrayUnion(items)\r\n                })\r\n            break;\r\n        case \"notes\":\r\n            reference\r\n                .doc(id)\r\n                .update({\r\n                    \"notes\": firebase.firestore.FieldValue.arrayUnion(items)\r\n                })\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function removeItems(id, field, items) {\r\n    switch (field) {\r\n        case \"tags\":\r\n            reference\r\n                .doc(id)\r\n                .update({\r\n                    \"tags\": firebase.firestore.FieldValue.arrayRemove(items)\r\n                })\r\n            break;\r\n        case \"notes\":\r\n            reference\r\n                .doc(id)\r\n                .update({\r\n                    \"notes\": firebase.firestore.FieldValue.arrayRemove(items)\r\n                })\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function updateItem(id, boolean) {\r\n    reference\r\n        .doc(id)\r\n        .update({\r\n            \"hasMade\": !boolean\r\n        })\r\n} \r\n","import React, { useState, useRef } from 'react';\r\n// import firebase from \"../utils/firebase\";\r\nimport moment from \"moment\";\r\nimport ShowMoreText from 'react-show-more-text';\r\nimport Popup from 'reactjs-popup';\r\nimport { addItems, deleteEntry, removeItems, updateItem } from \"../helpers/functions\";\r\n\r\nconst Card = ({ docID, title, imgSrc, author, description, timestamp, hasMade, notes, tags, url }) => {\r\n\r\n    const [tagsToAdd, setTagsToAdd] = useState(\"\");\r\n    const [notesToAdd, setNotesToAdd] = useState(\"\");\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const add = (e, field) => {\r\n        e.preventDefault();\r\n        setIsEditing(false);\r\n\r\n        switch (field) {\r\n            case \"tags\":\r\n                let newTags = tagsToAdd;\r\n                if (newTags.length) {\r\n                    if (newTags.length === 1) {\r\n                        addItems(docID, \"tags\", newTags);\r\n                    } else {\r\n                        newTags = newTags.split(\",\")\r\n                        newTags.forEach(tag => {\r\n                            addItems(docID, \"tags\", tag);\r\n                        });\r\n                    }\r\n                    setTagsToAdd(\"\");\r\n                }\r\n                break;\r\n            case \"notes\":\r\n                let newNotes = notesToAdd\r\n                if (newNotes.length) {\r\n                    let newNotes = notesToAdd.split(\"\\n\\n\");\r\n                    newNotes.forEach(note => {\r\n                        addItems(docID, \"notes\", note);\r\n                    });\r\n                    setNotesToAdd(\"\");\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const remove = (e, field) => {\r\n        e.preventDefault();\r\n        let itemToRemove = e.target.closest(\"li\").textContent.slice(0, -1);\r\n\r\n        switch (field) {\r\n            case \"tags\":\r\n                removeItems(docID, \"tags\", itemToRemove)\r\n                break;\r\n            case \"notes\":\r\n                removeItems(docID, \"notes\", itemToRemove)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-top\">\r\n                <img src={imgSrc ? imgSrc : \"./graphics/default_image.jpg\"} />\r\n                <Popup trigger={<span className=\"delete\"></span>} modal>\r\n                    {close => (\r\n                        <div className=\"modal\">\r\n                            <button className=\"close\" onClick={close}>X</button>\r\n                            <div className=\"header\">Are You Sure that You Want to Delete this Recipe???</div>\r\n                            <button className=\"delete\" onClick={() => deleteEntry(docID)}>Delete this Recipe Entry</button>\r\n                        </div>\r\n                    )}\r\n                </Popup>\r\n            </div>\r\n            <div className=\"card-bottom\">\r\n                <div className=\"title-wrapper\">\r\n                    <h3>{title}</h3>\r\n                    <div className=\"checkbox-wrapper\">\r\n                        <input type=\"checkbox\" className=\"has-made\" name=\"has-made\"\r\n                            value={hasMade}\r\n                            onChange={() => console.log(\"click\")}\r\n                            checked={hasMade}\r\n                        />\r\n                        <label\r\n                            htmlFor=\"has-made\"\r\n                            onClick={() => updateItem(docID, hasMade)}\r\n                        >\r\n                            Cooked\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <p>Author: <strong><em>{author.length ? author : \"No Assigned Author\"}</em></strong></p>\r\n                <div className=\"description\">\r\n                    <ShowMoreText\r\n                        lines={5}\r\n                        more='Show more'\r\n                        less='Show less'\r\n                        anchorClass='description-anchor'\r\n                        expanded={false}\r\n                        width={0}\r\n                    >\r\n                        {description}\r\n                    </ShowMoreText>\r\n                </div>\r\n                <div>\r\n                    <div className=\"tags-header\">\r\n                        <p><strong>Tagged As:</strong></p>\r\n                        {isEditing ? (\r\n                            <form\r\n                                onSubmit={e => add(e, \"tags\")}\r\n                            >\r\n                                <textarea\r\n                                    name=\"tags\"\r\n                                    placeholder=\"Enter ',' separated tags\"\r\n                                    rows=\"2\"\r\n                                    value={tagsToAdd}\r\n                                    onChange={e => setTagsToAdd(e.target.value)}\r\n                                />\r\n                                <button\r\n                                    type=\"submit\"\r\n                                >{tagsToAdd.length > 0 ? \"Submit\" : \"Close\"}</button>\r\n                            </form>\r\n                        ) : (\r\n                                <p className=\"add\" onClick={() => setIsEditing(true)}>+</p>\r\n                            )}\r\n                    </div>\r\n                    {tags.length > 0 ?\r\n                        (\r\n                            <ul className=\"tags\">\r\n                                {tags.map((tag, i) => (\r\n                                    <li\r\n                                        key={docID + i}\r\n                                    >{tag}\r\n                                        <div className=\"delete-tag\" onClick={(e) => remove(e, \"tags\")}>\r\n                                            <span>x</span>\r\n                                        </div>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        )\r\n                        : (\r\n                            <p>This recipe has not been tagged yet</p>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <Popup trigger={\r\n                        notes.length > 0 ? (\r\n                            <div className=\"see-notes note\">See Notes</div>\r\n                        ) : (\r\n                                <div className=\"make-notes note\">Make a Note</div>\r\n                            )\r\n                    } modal>\r\n                        {close => (\r\n                            <div className=\"modal notes-modal\">\r\n                                <button className=\"close\" onClick={close}>X</button>\r\n                                <div className=\"header\">{title} Notes</div>\r\n                                <div className=\"content\">\r\n                                    {notes.length > 0 ? (\r\n                                        <ol>\r\n                                            {notes.map(note => (\r\n                                                <li\r\n                                                    key={note}\r\n                                                >{note}\r\n                                                    <div className=\"delete-note\" onClick={(e) => remove(e, \"notes\")}>\r\n                                                        <span>x</span>\r\n                                                    </div>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ol>\r\n                                    ) : (\r\n                                            <p>There are no notes for this recipe yet.</p>\r\n                                        )}\r\n                                </div>\r\n                                <div className=\"actions\">\r\n                                    <form\r\n                                        onSubmit={e => add(e, \"notes\")}\r\n                                    >\r\n                                        <textarea\r\n                                            name=\"notes\"\r\n                                            placeholder=\"Add additional notes here.\"\r\n                                            rows=\"5\"\r\n                                            value={notesToAdd}\r\n                                            onChange={e => setNotesToAdd(e.target.value)}\r\n                                        />\r\n                                        <button type=\"submit\">Add Note</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </Popup>\r\n                </div>\r\n                <div className=\"link\">\r\n                    <a href={url} target=\"_blank\">Recipe Link</a>\r\n                </div>\r\n                <span className=\"timestamp\">Saved On: {moment(timestamp).format(\"MMMM Do YYYY\")}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, { useState, useEffect } from 'react';\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\"\nimport RecipeCard from './components/RecipeCard';\nimport './App.scss';\nimport firebase from \"./utils/firebase\";\n\nfunction App() {\n\n  const [allRecipes, setAllRecipes] = useState([])\n  const [filteredRecipes, setFilteredRecipes] = useState([])\n  const [sortBy, setSortBy] = useState(\"TIME_DESC\")\n  const [query, setQuery] = useState(\"\")\n\n  useEffect(() => {\n\n    const recipesRef = firebase\n      .firestore()\n      .collection(\"recipes\")\n\n    let unsubscribe;\n\n    unsubscribe = recipesRef\n      .orderBy(sortOptions[sortBy].column, sortOptions[sortBy].direction)\n      .onSnapshot((snapshot) => {\n        const newRecipes = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data()\n        }))\n\n        setAllRecipes(newRecipes)\n        setFilteredRecipes(newRecipes)\n        setQuery(\"\")\n      })\n\n    return () => unsubscribe()\n  }, [sortBy])\n\n  useEffect(() => {\n    const searchAllRegex = query && new RegExp(`${query}`, \"gi\");\n    const result = allRecipes.filter(\n      recipe =>\n        (!searchAllRegex || searchAllRegex.test(recipe.title) + searchAllRegex.test(recipe.author) + searchAllRegex.test(recipe.tags))\n    );\n    setFilteredRecipes(result);\n  }, [query])\n\n  const sortOptions = {\n    \"TIME_ASC\": { column: \"timestamp\", direction: \"asc\" },\n    \"TIME_DESC\": { column: \"timestamp\", direction: \"desc\" },\n    \"TITLE_ASC\": { column: \"title\", direction: \"asc\" },\n    \"TITLE_DESC\": { column: \"title\", direction: \"desc\" },\n    \"COOKED\": { column: \"hasMade\", direction: \"desc\" },\n    \"NOT_COOKED\": { column: \"hasMade\", direction: \"asc\" }\n  }\n\n  return (\n    <div id=\"options_page\">\n      <header>\n        <div className=\"titles\">\n          <h1>Dog-Ear</h1>\n          <h2>Recipe Repository</h2>\n        </div>\n        <div className=\"dog-image\">\n          <img src=\"./graphics/dog.png\" alt=\"Woof woof\" />\n        </div>\n      </header>\n      <div className=\"dropdown\">\n        <select value={sortBy} onChange={e => setSortBy(e.currentTarget.value)}>\n          <option value=\"TIME_DESC\">Newest</option>\n          <option value=\"TIME_ASC\">Oldest</option>\n          <option value=\"TITLE_ASC\">Title A-Z</option>\n          <option value=\"TITLE_DESC\">Title Z-A</option>\n          <option value=\"COOKED\">Has Been Cooked</option>\n          <option value=\"NOT_COOKED\">Has NOT Been Cooked</option>\n        </select>\n      </div>\n      <div className=\"search-wrapper\">\n        <div className=\"search\">\n          <input type=\"text\" placeholder=\"Search\" value={query} onChange={e => setQuery(e.target.value)} />\n        </div>\n      </div>\n      <div className=\"card-container\">\n        <ResponsiveMasonry\n          columnsCountBreakPoints={{ 300: 1, 500: 2, 750: 3, 900: 4 }}\n        >\n          <Masonry\n            gutter={\"1em\"}\n          >\n            {filteredRecipes.map((recipe) => (\n              <RecipeCard\n                key={recipe.id}\n                docID={recipe.id}\n                title={recipe.title}\n                imgSrc={recipe.imgSrc}\n                author={recipe.author}\n                description={recipe.description}\n                timestamp={recipe.timestamp}\n                hasMade={recipe.hasMade}\n                tags={recipe.tags}\n                notes={recipe.notes}\n                url={recipe.url}\n              />\n            ))}\n          </Masonry>\n        </ResponsiveMasonry>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}