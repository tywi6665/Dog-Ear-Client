{"version":3,"sources":["utils/firebase.js","helpers/functions.js","components/RecipeCard.js","components/Editable.js","components/RecipeEntry.js","App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","reference","firestore","collection","addItems","id","field","items","doc","update","FieldValue","arrayUnion","removeItems","arrayRemove","Card","docID","title","imgSrc","author","description","timestamp","hasMade","notes","tags","url","useState","tagsToAdd","setTagsToAdd","notesToAdd","setNotesToAdd","isEditing","setIsEditing","add","e","preventDefault","newTags","length","split","forEach","tag","note","remove","itemToRemove","target","closest","textContent","slice","className","src","trigger","modal","close","onClick","delete","type","name","value","onChange","console","log","checked","htmlFor","boolean","lines","more","less","anchorClass","expanded","width","onSubmit","placeholder","rows","map","i","href","moment","format","Editable","childRef","text","children","parent","props","setEditing","useEffect","current","focus","onBlur","onKeyDown","key","keys","allKeys","indexOf","handleKeyDown","recipe","setRecipe","setIsOverlay","setUrl","setTitle","setImgSrc","setDescription","setAuthor","setTags","allNotes","setAllNotes","setHasMade","inputRef","useRef","ref","join","splitTags","Date","now","App","allRecipes","setAllRecipes","filteredRecipes","setFilteredRecipes","sortBy","setSortBy","query","setQuery","loadClient","isOverlay","unsubscribe","recipesRef","orderBy","sortOptions","column","direction","onSnapshot","snapshot","newRecipes","docs","data","searchAllRegex","RegExp","result","filter","test","style","display","Object","RecipeEntry","alt","currentTarget","socket","socketIOClient","on","emit","scrapeData","columnsCountBreakPoints","300","500","750","900","gutter","RecipeCard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8016be45.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\n// Firebase Config\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD9SrA01N_4vLdkCLrddWlCGQl_ylIszaI\",\r\n    authDomain: \"dog-ear-recipe-extension-4bfbf.firebaseapp.com\",\r\n    databaseURL: \"https://dog-ear-recipe-extension-4bfbf.firebaseio.com\",\r\n    projectId: \"dog-ear-recipe-extension-4bfbf\",\r\n    storageBucket: \"dog-ear-recipe-extension-4bfbf.appspot.com\",\r\n    messagingSenderId: \"147277096133\",\r\n    appId: \"1:147277096133:web:6e74a347d42254b231bcac\",\r\n    measurementId: \"G-5GEY75XZWH\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import firebase from \"../utils/firebase\";\r\n\r\nconst reference = firebase\r\n    .firestore()\r\n    .collection(\"recipes\")\r\n\r\nexport function create(args) {\r\n    reference\r\n        .add(...args)\r\n}\r\n\r\nexport function deleteEntry(id) {\r\n    reference\r\n        .doc(id)\r\n        .delete()\r\n}\r\n\r\nexport function addItems(id, field, items) {\r\n    switch (field) {\r\n        case \"tags\":\r\n            reference\r\n                .doc(id)\r\n                .update({\r\n                    \"tags\": firebase.firestore.FieldValue.arrayUnion(items)\r\n                })\r\n            break;\r\n        case \"notes\":\r\n            reference\r\n                .doc(id)\r\n                .update({\r\n                    \"notes\": firebase.firestore.FieldValue.arrayUnion(items)\r\n                })\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function removeItems(id, field, items) {\r\n    switch (field) {\r\n        case \"tags\":\r\n            reference\r\n                .doc(id)\r\n                .update({\r\n                    \"tags\": firebase.firestore.FieldValue.arrayRemove(items)\r\n                })\r\n            break;\r\n        case \"notes\":\r\n            reference\r\n                .doc(id)\r\n                .update({\r\n                    \"notes\": firebase.firestore.FieldValue.arrayRemove(items)\r\n                })\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function updateItem(id, boolean) {\r\n    reference\r\n        .doc(id)\r\n        .update({\r\n            \"hasMade\": !boolean\r\n        })\r\n} \r\n","import React, { useState, useRef } from 'react';\r\n// import firebase from \"../utils/firebase\";\r\nimport moment from \"moment\";\r\nimport ShowMoreText from 'react-show-more-text';\r\nimport Popup from 'reactjs-popup';\r\nimport { addItems, deleteEntry, removeItems, updateItem } from \"../helpers/functions\";\r\n\r\nconst Card = ({ docID, title, imgSrc, author, description, timestamp, hasMade, notes, tags, url }) => {\r\n\r\n    const [tagsToAdd, setTagsToAdd] = useState(\"\");\r\n    const [notesToAdd, setNotesToAdd] = useState(\"\");\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const add = (e, field) => {\r\n        e.preventDefault();\r\n        setIsEditing(false);\r\n\r\n        switch (field) {\r\n            case \"tags\":\r\n                let newTags = tagsToAdd;\r\n                if (newTags.length) {\r\n                    if (newTags.length === 1) {\r\n                        addItems(docID, \"tags\", newTags);\r\n                    } else {\r\n                        newTags = newTags.split(\",\")\r\n                        newTags.forEach(tag => {\r\n                            addItems(docID, \"tags\", tag);\r\n                        });\r\n                    }\r\n                    setTagsToAdd(\"\");\r\n                }\r\n                break;\r\n            case \"notes\":\r\n                let newNotes = notesToAdd\r\n                if (newNotes.length) {\r\n                    let newNotes = notesToAdd.split(\"\\n\\n\");\r\n                    newNotes.forEach(note => {\r\n                        addItems(docID, \"notes\", note);\r\n                    });\r\n                    setNotesToAdd(\"\");\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const remove = (e, field) => {\r\n        e.preventDefault();\r\n        let itemToRemove = e.target.closest(\"li\").textContent.slice(0, -1);\r\n\r\n        switch (field) {\r\n            case \"tags\":\r\n                removeItems(docID, \"tags\", itemToRemove)\r\n                break;\r\n            case \"notes\":\r\n                removeItems(docID, \"notes\", itemToRemove)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-top\">\r\n                <img src={imgSrc ? imgSrc : \"./graphics/default_image.jpg\"} />\r\n                <Popup trigger={<span className=\"delete\"></span>} modal>\r\n                    {close => (\r\n                        <div className=\"modal\">\r\n                            <button className=\"close\" onClick={close}>X</button>\r\n                            <div className=\"header\">Are You Sure that You Want to Delete this Recipe???</div>\r\n                            <button className=\"delete\" onClick={() => deleteEntry(docID)}>Delete this Recipe Entry</button>\r\n                        </div>\r\n                    )}\r\n                </Popup>\r\n            </div>\r\n            <div className=\"card-bottom\">\r\n                <div className=\"title-wrapper\">\r\n                    <h3>{title}</h3>\r\n                    <div className=\"checkbox-wrapper\">\r\n                        <input type=\"checkbox\" className=\"has-made\" name=\"has-made\"\r\n                            value={hasMade}\r\n                            onChange={() => console.log(\"click\")}\r\n                            checked={hasMade}\r\n                        />\r\n                        <label\r\n                            htmlFor=\"has-made\"\r\n                            onClick={() => updateItem(docID, hasMade)}\r\n                        >\r\n                            Cooked\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <p>Author: <strong><em>{author.length ? author : \"No Assigned Author\"}</em></strong></p>\r\n                <div className=\"description\">\r\n                    <ShowMoreText\r\n                        lines={5}\r\n                        more='Show more'\r\n                        less='Show less'\r\n                        anchorClass='description-anchor'\r\n                        expanded={false}\r\n                        width={0}\r\n                    >\r\n                        {description}\r\n                    </ShowMoreText>\r\n                </div>\r\n                <div>\r\n                    <div className=\"tags-header\">\r\n                        <p><strong>Tagged As:</strong></p>\r\n                        {isEditing ? (\r\n                            <form\r\n                                onSubmit={e => add(e, \"tags\")}\r\n                            >\r\n                                <textarea\r\n                                    name=\"tags\"\r\n                                    placeholder=\"Enter ',' separated tags\"\r\n                                    rows=\"2\"\r\n                                    value={tagsToAdd}\r\n                                    onChange={e => setTagsToAdd(e.target.value)}\r\n                                />\r\n                                <button\r\n                                    type=\"submit\"\r\n                                >{tagsToAdd.length > 0 ? \"Submit\" : \"Close\"}</button>\r\n                            </form>\r\n                        ) : (\r\n                                <p className=\"add\" onClick={() => setIsEditing(true)}>+</p>\r\n                            )}\r\n                    </div>\r\n                    {tags.length > 0 ?\r\n                        (\r\n                            <ul className=\"tags\">\r\n                                {tags.map((tag, i) => (\r\n                                    <li\r\n                                        key={docID + i}\r\n                                    >{tag}\r\n                                        <div className=\"delete-tag\" onClick={(e) => remove(e, \"tags\")}>\r\n                                            <span>x</span>\r\n                                        </div>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        )\r\n                        : (\r\n                            <p>This recipe has not been tagged yet</p>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <Popup trigger={\r\n                        notes.length > 0 ? (\r\n                            <div className=\"see-notes note\">See Notes</div>\r\n                        ) : (\r\n                                <div className=\"make-notes note\">Make a Note</div>\r\n                            )\r\n                    } modal>\r\n                        {close => (\r\n                            <div className=\"modal notes-modal\">\r\n                                <button className=\"close\" onClick={close}>X</button>\r\n                                <div className=\"header\">{title} Notes</div>\r\n                                <div className=\"content\">\r\n                                    {notes.length > 0 ? (\r\n                                        <ol>\r\n                                            {notes.map(note => (\r\n                                                <li\r\n                                                    key={note}\r\n                                                >{note}\r\n                                                    <div className=\"delete-note\" onClick={(e) => remove(e, \"notes\")}>\r\n                                                        <span>x</span>\r\n                                                    </div>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ol>\r\n                                    ) : (\r\n                                            <p>There are no notes for this recipe yet.</p>\r\n                                        )}\r\n                                </div>\r\n                                <div className=\"actions\">\r\n                                    <form\r\n                                        onSubmit={e => add(e, \"notes\")}\r\n                                    >\r\n                                        <textarea\r\n                                            name=\"notes\"\r\n                                            placeholder=\"Add additional notes here.\"\r\n                                            rows=\"5\"\r\n                                            value={notesToAdd}\r\n                                            onChange={e => setNotesToAdd(e.target.value)}\r\n                                        />\r\n                                        <button type=\"submit\">Add Note</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </Popup>\r\n                </div>\r\n                <div className=\"link\">\r\n                    <a href={url} target=\"_blank\">Recipe Link</a>\r\n                </div>\r\n                <span className=\"timestamp\">Saved On: {moment(timestamp).format(\"MMMM Do YYYY\")}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Editable = ({\r\n    childRef,\r\n    text,\r\n    type,\r\n    placeholder,\r\n    children,\r\n    parent,\r\n    ...props\r\n}) => {\r\n\r\n    const [isEditing, setEditing] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (childRef && childRef.current && isEditing === true) {\r\n            childRef.current.focus();\r\n        }\r\n    }, [isEditing, childRef]);\r\n\r\n    const handleKeyDown = (e, type) => {\r\n        const { key } = e;\r\n        console.log(key)\r\n        const keys = [\"Escape\", \"Tab\"];\r\n        const enterKey = \"Enter\";\r\n        const allKeys = [...keys, enterKey]; // All keys array\r\n\r\n        if (\r\n            (type === \"textarea\" && keys.indexOf(key) > -1) ||\r\n            (type !== \"textarea\" && allKeys.indexOf(key) > -1)\r\n        ) {\r\n            setEditing(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section {...props}>\r\n            {isEditing ? (\r\n                <div\r\n                    onBlur={() => setEditing(false)}\r\n                    onKeyDown={e => handleKeyDown(e, type)}\r\n                >\r\n                    {children}\r\n                </div>\r\n            ) : (\r\n                    <div\r\n                        onClick={() => setEditing(true)}\r\n                    >\r\n                        {parent === \"options_page\" ? (\r\n                            <p className=\"add\">+</p>\r\n                        ) : (\r\n                                <span>\r\n                                    {text || placeholder}\r\n                                </span>\r\n                            )}\r\n                    </div>\r\n                )}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Editable;","import React, { useState, useRef } from 'react';\r\nimport Editable from \"../components/Editable\";\r\nimport firebase from \"../utils/firebase\";\r\n\r\nconst Card = ({ recipe, url, setRecipe, setIsOverlay, setUrl }) => {\r\n\r\n  const [title, setTitle] = useState(recipe.title);\r\n  const [imgSrc, setImgSrc] = useState(recipe.imgSrc);\r\n  const [description, setDescription] = useState(recipe.description);\r\n  const [author, setAuthor] = useState(recipe.author);\r\n  const [tags, setTags] = useState(recipe.tags);\r\n  const [allNotes, setAllNotes] = useState(\"\");\r\n  const [hasMade, setHasMade] = useState(false);\r\n  const inputRef = useRef();\r\n\r\n  const createEntry = () => {\r\n\r\n    let notes;\r\n\r\n    if (allNotes.length > 0) {\r\n      notes = allNotes.split(\"\\n\\n\")\r\n    } else {\r\n      notes = []\r\n    }\r\n\r\n    firebase\r\n      .firestore()\r\n      .collection(\"recipes\")\r\n      .add({\r\n        title,\r\n        imgSrc,\r\n        author,\r\n        description,\r\n        timestamp: Date.now(),\r\n        tags,\r\n        hasMade,\r\n        notes,\r\n        url\r\n      })\r\n    setRecipe({})\r\n    setIsOverlay(false)\r\n    setUrl(\"\")\r\n  }\r\n\r\n  const splitTags = tags => {\r\n    let split = tags.split(\",\")\r\n    setTags(split)\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-top\">\r\n        {imgSrc ?\r\n          <img src={imgSrc} />\r\n          :\r\n          <Editable\r\n            text={imgSrc}\r\n            placeholder='Right click on image, and click \"copy image address\". Paste address here.'\r\n            childRef={inputRef}\r\n            type=\"textarea\"\r\n          >\r\n            <textarea\r\n              ref={inputRef}\r\n              name=\"image source\"\r\n              placeholder='Right click on image, and click \"copy image address\". Paste address here.'\r\n              rows=\"5\"\r\n              value={imgSrc}\r\n              onChange={e => setImgSrc(e.target.value)}\r\n            />\r\n          </Editable>\r\n        }\r\n      </div>\r\n      <div className=\"card-bottom\">\r\n        <div className=\"title-wrapper\">\r\n          <h3>Title:</h3>\r\n          <div>\r\n            <label htmlFor=\"has-made\">Has Made:</label>\r\n            <input type=\"checkbox\" id=\"has-made\" name=\"has-made\" value={hasMade} onClick={() => setHasMade(!hasMade)} />\r\n          </div>\r\n        </div>\r\n        <Editable\r\n          text={title}\r\n          placeholder=\"Click Here to Add Recipe Title\"\r\n          childRef={inputRef}\r\n          type=\"textarea\"\r\n        >\r\n          <textarea\r\n            ref={inputRef}\r\n            name=\"title\"\r\n            placeholder=\"Click Here to Add Recipe Title\"\r\n            rows=\"5\"\r\n            value={title}\r\n            onChange={e => setTitle(e.target.value)}\r\n          />\r\n        </Editable>\r\n        <h3>Author:</h3>\r\n        <Editable\r\n          text={author}\r\n          placeholder=\"Click Here to Add Recipe Author\"\r\n          childRef={inputRef}\r\n          type=\"textarea\"\r\n        >\r\n          <textarea\r\n            ref={inputRef}\r\n            name=\"author\"\r\n            placeholder=\"Click Here to Add Recipe Author\"\r\n            rows=\"5\"\r\n            value={author}\r\n            onChange={e => setAuthor(e.target.value)}\r\n          />\r\n        </Editable>\r\n        <div className=\"description\">\r\n          <h3>Description:</h3>\r\n          <Editable\r\n            text={description}\r\n            placeholder=\"Click Here to Add Recipe Description\"\r\n            childRef={inputRef}\r\n            type=\"textarea\"\r\n          >\r\n            <textarea\r\n              ref={inputRef}\r\n              name=\"description\"\r\n              placeholder=\"Click Here to Add Recipe Description\"\r\n              rows=\"5\"\r\n              value={description}\r\n              onChange={e => setDescription(e.target.value)}\r\n            />\r\n          </Editable>\r\n        </div>\r\n        <div>\r\n          <h3>Tagged As:</h3>\r\n          <Editable\r\n            text={tags.join(\",\")}\r\n            placeholder=\"Click Here to Add Recipe Tags\"\r\n            childRef={inputRef}\r\n            type=\"textarea\"\r\n          >\r\n            <textarea\r\n              ref={inputRef}\r\n              name=\"tags\"\r\n              placeholder=\"Enter ',' separated tags here\"\r\n              rows=\"5\"\r\n              value={tags.join(\",\")}\r\n              onChange={e => splitTags(e.target.value)}\r\n            />\r\n          </Editable>\r\n        </div>\r\n        <div>\r\n          <h3>Additional Notes:</h3>\r\n          <Editable\r\n            text={allNotes}\r\n            placeholder=\"Click Here to Add Additional Notes\"\r\n            childRef={inputRef}\r\n            type=\"textarea\"\r\n          >\r\n            <textarea\r\n              ref={inputRef}\r\n              name=\"notes\"\r\n              placeholder=\"Add additional notes here.\"\r\n              rows=\"10\"\r\n              value={allNotes}\r\n              onChange={e => setAllNotes(e.target.value)}\r\n            />\r\n          </Editable>\r\n        </div>\r\n        <div className=\"link\">\r\n          <button onClick={createEntry} >Create Entry</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React, { useState, useEffect } from 'react';\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\"\nimport RecipeCard from './components/RecipeCard';\nimport RecipeEntry from \"./components/RecipeEntry\";\nimport './App.scss';\nimport firebase from \"./utils/firebase\";\n\nimport socketIOClient from \"socket.io-client\";\n\nconst ENDPOINT = \"https://still-hamlet-76887.herokuapp.com/?EIO=3&transport=polling\";\n\nfunction App() {\n\n  const [allRecipes, setAllRecipes] = useState([]);\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  const [sortBy, setSortBy] = useState(\"TIME_DESC\");\n  const [query, setQuery] = useState(\"\");\n  const [loadClient, setLoadClient] = useState(true);\n  const [url, setUrl] = useState(\"\");\n  const [isOverlay, setIsOverlay] = useState(false);\n  const [recipe, setRecipe] = useState({});\n\n  useEffect(() => {\n\n    const recipesRef = firebase\n      .firestore()\n      .collection(\"recipes\")\n\n    let unsubscribe;\n\n    unsubscribe = recipesRef\n      .orderBy(sortOptions[sortBy].column, sortOptions[sortBy].direction)\n      .onSnapshot((snapshot) => {\n        const newRecipes = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data()\n        }))\n\n        setAllRecipes(newRecipes)\n        setFilteredRecipes(newRecipes)\n        setQuery(\"\")\n      })\n\n    return () => unsubscribe()\n  }, [sortBy])\n\n  useEffect(() => {\n    const searchAllRegex = query && new RegExp(`${query}`, \"gi\");\n    const result = allRecipes.filter(\n      recipe =>\n        (!searchAllRegex || searchAllRegex.test(recipe.title) + searchAllRegex.test(recipe.author) + searchAllRegex.test(recipe.tags))\n    );\n    setFilteredRecipes(result);\n  }, [query])\n\n  const scrapeData = () => {\n    // setIsClicked(true)\n    const socket = socketIOClient(ENDPOINT);\n    socket.on(\"connect\", function () {\n      socket.emit(\"from_client\", url);\n    });\n\n    socket.on(\"from_server\", data => {\n      console.log('Connection to server established.', data);\n      setRecipe(data)\n    });\n    // CLEAN UP THE EFFECT\n    return () => socket.disconnect();\n  }\n\n  const sortOptions = {\n    \"TIME_ASC\": { column: \"timestamp\", direction: \"asc\" },\n    \"TIME_DESC\": { column: \"timestamp\", direction: \"desc\" },\n    \"TITLE_ASC\": { column: \"title\", direction: \"asc\" },\n    \"TITLE_DESC\": { column: \"title\", direction: \"desc\" },\n    \"COOKED\": { column: \"hasMade\", direction: \"desc\" },\n    \"NOT_COOKED\": { column: \"hasMade\", direction: \"asc\" }\n  }\n\n  return (\n    <div id=\"client_page\">\n      <div className=\"overlay\"\n        style={isOverlay ? { display: \"block\" } : { display: \"none\" }}\n      >\n        {loadClient && url && isOverlay ?\n          (<div className=\"popup\">\n            <div className=\"back\">\n              <button onClick={() => { setIsOverlay(false); setRecipe({}) }}></button>\n            </div>\n            {Object.keys(recipe).length ?\n              <>\n                <h3><em>Example Recipe Entry:</em></h3>\n                <RecipeEntry\n                  recipe={recipe}\n                  key={recipe.id}\n                  url={url}\n                  setRecipe={setRecipe}\n                  setIsOverlay={setIsOverlay}\n                  setUrl={setUrl}\n                />\n              </>\n              :\n              <>\n                <div className=\"dog-loader\">\n                  <div className=\"dog-head\">\n                    <img src=\"http://www.clker.com/cliparts/j/3/Z/Y/D/5/dog-head-md.png\" />\n                  </div>\n                  <div className=\"dog-body\">\n                  </div>\n                </div>\n                <p className=\"dog-loader-p\"><em>Scraping data...</em></p>\n              </>\n            }\n          </div>)\n          :\n          <></>\n        }\n      </div>\n      <header>\n        <div className=\"titles\">\n          <h1>Dog-Ear</h1>\n          <h2>Recipe Repository</h2>\n        </div>\n        <div className=\"dog-image\">\n          <img src=\"./graphics/dog.png\" alt=\"Woof woof\" />\n        </div>\n      </header>\n      <div className=\"interaction-wrapper\">\n        <div className=\"search-sort\">\n          <div className=\"dropdown\">\n            <select value={sortBy} onChange={e => setSortBy(e.currentTarget.value)}>\n              <option value=\"TIME_DESC\">Newest</option>\n              <option value=\"TIME_ASC\">Oldest</option>\n              <option value=\"TITLE_ASC\">Title A-Z</option>\n              <option value=\"TITLE_DESC\">Title Z-A</option>\n              <option value=\"COOKED\">Has Been Cooked</option>\n              <option value=\"NOT_COOKED\">Has NOT Been Cooked</option>\n            </select>\n          </div>\n          <div className=\"search-wrapper\">\n            <div className=\"search\">\n              <input type=\"text\" placeholder=\"Search\" value={query} onChange={e => setQuery(e.target.value)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"scrape-wrapper\">\n          <div className=\"scrape\">\n            <form>\n              <label htmlFor=\"#scrape-input\">Create New Recipe Entry:</label>\n              <input type=\"text\"\n                id=\"scrape-input\"\n                placeholder=\"Paste URL Here\"\n                value={url} onChange={e => setUrl(e.target.value)}\n              />\n              <input type=\"button\" value=\"Submit\" onClick={() => { setIsOverlay(true); scrapeData() }} />\n            </form>\n          </div>\n        </div>\n      </div>\n      <div className=\"card-container\">\n        <ResponsiveMasonry\n          columnsCountBreakPoints={{ 300: 1, 500: 2, 750: 3, 900: 4 }}\n        >\n          <Masonry\n            gutter={\"1em\"}\n          >\n            {filteredRecipes.map((recipe) => (\n              <RecipeCard\n                key={recipe.id}\n                docID={recipe.id}\n                title={recipe.title}\n                imgSrc={recipe.imgSrc}\n                author={recipe.author}\n                description={recipe.description}\n                timestamp={recipe.timestamp}\n                hasMade={recipe.hasMade}\n                tags={recipe.tags}\n                notes={recipe.notes}\n                url={recipe.url}\n              />\n            ))}\n          </Masonry>\n        </ResponsiveMasonry>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}