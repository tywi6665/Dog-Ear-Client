{"version":3,"sources":["utils/firebase.js","helpers/functions.js","components/RecipeCard.js","components/Editable.js","components/RecipeEntry.js","App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","reference","firestore","collection","addItems","id","field","items","doc","update","FieldValue","arrayUnion","removeItems","arrayRemove","updateItem","boolean","Card","docID","title","imgSrc","author","rating","description","timestamp","hasMade","notes","tags","tagsList","url","useState","tagsToAdd","setTagsToAdd","quickTag","setQuickTag","notesToAdd","setNotesToAdd","isEditing","setIsEditing","open","setOpen","newRating","setNewRating","currentTab","setCurrentTab","closeModal","add","e","preventDefault","newTags","length","split","forEach","tag","note","remove","itemToRemove","target","closest","textContent","slice","ratingChanged","updateRating","className","src","onClick","o","trigger","modal","close","delete","starRatedColor","starEmptyColor","changeRating","numberOfStars","starDimension","starSpacing","name","type","value","onChange","console","log","checked","htmlFor","href","moment","format","closeOnDocumentClick","onClose","lines","more","less","anchorClass","expanded","width","onSubmit","placeholder","rows","currentTarget","disabled","map","i","Editable","childRef","text","children","parent","props","setEditing","useEffect","current","focus","onBlur","onKeyDown","key","keys","allKeys","indexOf","handleKeyDown","recipe","setRecipe","setIsOverlay","setUrl","setTitle","setImgSrc","setDescription","setAuthor","setTags","allNotes","setAllNotes","setHasMade","inputRef","useRef","ref","join","splitTags","Date","now","App","allRecipes","setAllRecipes","filteredRecipes","setFilteredRecipes","setTagsList","sortBy","setSortBy","query","setQuery","loadClient","isOverlay","unsubscribe","recipesRef","orderBy","sortOptions","column","direction","onSnapshot","snapshot","newRecipes","docs","data","arr","cleanedTag","toLowerCase","trim","includes","push","sort","searchAllRegex","RegExp","result","filter","test","connect","socket","socketIOClient","on","emit","scrapeData","style","display","Object","RecipeEntry","alt","RecipeCard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a1d9a65.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\n// Firebase Config\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD9SrA01N_4vLdkCLrddWlCGQl_ylIszaI\",\r\n    authDomain: \"dog-ear-recipe-extension-4bfbf.firebaseapp.com\",\r\n    databaseURL: \"https://dog-ear-recipe-extension-4bfbf.firebaseio.com\",\r\n    projectId: \"dog-ear-recipe-extension-4bfbf\",\r\n    storageBucket: \"dog-ear-recipe-extension-4bfbf.appspot.com\",\r\n    messagingSenderId: \"147277096133\",\r\n    appId: \"1:147277096133:web:6e74a347d42254b231bcac\",\r\n    measurementId: \"G-5GEY75XZWH\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import firebase from \"../utils/firebase\";\r\n\r\nconst reference = firebase\r\n    .firestore()\r\n    .collection(\"recipes\")\r\n\r\nexport function create(args) {\r\n    reference\r\n        .add(...args)\r\n}\r\n\r\nexport function deleteEntry(id) {\r\n    reference\r\n        .doc(id)\r\n        .delete()\r\n}\r\n\r\nexport function addItems(id, field, items) {\r\n    switch (field) {\r\n        case \"tags\":\r\n            reference\r\n                .doc(id)\r\n                .update({\r\n                    \"tags\": firebase.firestore.FieldValue.arrayUnion(items)\r\n                })\r\n            break;\r\n        case \"notes\":\r\n            reference\r\n                .doc(id)\r\n                .update({\r\n                    \"notes\": firebase.firestore.FieldValue.arrayUnion(items)\r\n                })\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function removeItems(id, field, items) {\r\n    switch (field) {\r\n        case \"tags\":\r\n            reference\r\n                .doc(id)\r\n                .update({\r\n                    \"tags\": firebase.firestore.FieldValue.arrayRemove(items)\r\n                })\r\n            break;\r\n        case \"notes\":\r\n            reference\r\n                .doc(id)\r\n                .update({\r\n                    \"notes\": firebase.firestore.FieldValue.arrayRemove(items)\r\n                })\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function updateItem(id, boolean) {\r\n    reference\r\n        .doc(id)\r\n        .update({\r\n            \"hasMade\": !boolean\r\n        })\r\n}\r\n\r\nexport function updateRating(id, rating) {\r\n    reference\r\n        .doc(id)\r\n        .update({\r\n            \"rating\": rating\r\n        })\r\n}\r\n","import React, { useState } from 'react';\r\nimport moment from \"moment\";\r\nimport ShowMoreText from 'react-show-more-text';\r\nimport Popup from 'reactjs-popup';\r\nimport StarRatings from 'react-star-ratings';\r\nimport { addItems, deleteEntry, removeItems, updateItem, updateRating } from \"../helpers/functions\";\r\n\r\nconst Card = ({ docID, title, imgSrc, author, rating, description, timestamp, hasMade, notes, tags, tagsList, url }) => {\r\n\r\n    const [tagsToAdd, setTagsToAdd] = useState(\"\");\r\n    const [quickTag, setQuickTag] = useState(\"\");\r\n    const [notesToAdd, setNotesToAdd] = useState(\"\");\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [newRating, setNewRating] = useState(rating)\r\n    const [currentTab, setCurrentTab] = useState(1)\r\n    const closeModal = () => [setOpen(false), setCurrentTab(1)]\r\n\r\n    const add = (e, field) => {\r\n        e.preventDefault();\r\n        setIsEditing(false);\r\n        setQuickTag(\"\");\r\n\r\n        switch (field) {\r\n            case \"tags\":\r\n                let newTags = tagsToAdd;\r\n                if (newTags.length) {\r\n                    if (newTags.length === 1) {\r\n                        addItems(docID, \"tags\", newTags);\r\n                    } else {\r\n                        newTags = newTags.split(\",\")\r\n                        newTags.forEach(tag => {\r\n                            addItems(docID, \"tags\", tag);\r\n                        });\r\n                    }\r\n                    setTagsToAdd(\"\");\r\n                }\r\n                break;\r\n            case \"notes\":\r\n                let newNotes = notesToAdd\r\n                if (newNotes.length) {\r\n                    let newNotes = notesToAdd.split(\"\\n\\n\");\r\n                    newNotes.forEach(note => {\r\n                        addItems(docID, \"notes\", note);\r\n                    });\r\n                    setNotesToAdd(\"\");\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const remove = (e, field) => {\r\n        e.preventDefault();\r\n        let itemToRemove = e.target.closest(\"li\").textContent.slice(0, -1);\r\n\r\n        switch (field) {\r\n            case \"tags\":\r\n                removeItems(docID, \"tags\", itemToRemove)\r\n                break;\r\n            case \"notes\":\r\n                removeItems(docID, \"notes\", itemToRemove)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const ratingChanged = (rating) => {\r\n        setNewRating(rating)\r\n        updateRating(docID, rating)\r\n    }\r\n\r\n    const renderTab1 = () => {\r\n        return (\r\n            <>\r\n                <div className=\"title\">\r\n                    <h2>{title}</h2>\r\n                </div>\r\n                <div className=\"title\">\r\n                    <p>Author: <strong><em>{author.length ? author : \"No Assigned Author\"}</em></strong></p>\r\n                </div>\r\n                <div className=\"rating-hasMade\">\r\n                    <div className=\"rating\">\r\n                        <StarRatings\r\n                            rating={newRating}\r\n                            starRatedColor=\"#f04a26\"\r\n                            starEmptyColor=\"#808080\"\r\n                            changeRating={ratingChanged}\r\n                            numberOfStars={5}\r\n                            starDimension=\"25px\"\r\n                            starSpacing=\"3px\"\r\n                            name='rating'\r\n                        />\r\n                        <button onClick={() => ratingChanged(0)}>Reset</button>\r\n                    </div>\r\n                    <div className=\"has-made\">\r\n                        <input type=\"checkbox\" className=\"check\" name=\"check\"\r\n                            value={hasMade}\r\n                            onChange={() => console.log(\"click\")}\r\n                            checked={hasMade}\r\n                        />\r\n                        <label\r\n                            htmlFor=\"check\"\r\n                            onClick={() => updateItem(docID, hasMade)}\r\n                        >Cooked</label>\r\n                    </div>\r\n                </div>\r\n                <div className={description ? \"description\" : \"description description-em\"}>\r\n                    <ShowMoreText\r\n                        lines={5}\r\n                        more='Show more'\r\n                        less='Show less'\r\n                        anchorClass='description-anchor'\r\n                        expanded={false}\r\n                        width={0}\r\n                    >\r\n                        {description ? description : \"There is no description for this recipe.\"}\r\n                    </ShowMoreText>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const join = (value) => {\r\n        setQuickTag(value)\r\n        if (tagsToAdd.length === 0) {\r\n            setTagsToAdd(value)\r\n        } else {\r\n            let combinedTags = tagsToAdd + \",\" + value\r\n            setTagsToAdd(combinedTags)\r\n        }\r\n    }\r\n\r\n    const renderTab2 = () => {\r\n        return (\r\n            <div className=\"tags-wrapper\">\r\n                <div className=\"tags-header\">\r\n                    <p><strong>Tagged As:</strong></p>\r\n                    {isEditing ? (\r\n                        <form\r\n                            onSubmit={e => add(e, \"tags\")}\r\n                        >\r\n                            <div className=\"inner-form\">\r\n                                <textarea\r\n                                    name=\"tags\"\r\n                                    placeholder=\"Enter ',' delimited tags\"\r\n                                    rows=\"2\"\r\n                                    value={tagsToAdd}\r\n                                    onChange={e => setTagsToAdd(e.target.value)}\r\n                                />\r\n                                {/* <div className=\"dropdown\">\r\n                                    <div> */}\r\n                                <select\r\n                                    value={quickTag}\r\n                                    onChange={e => join(e.currentTarget.value)}>\r\n                                    <option value=\"\" disabled={true}>Quick Add Tags</option>\r\n                                    {tagsList.map((tag, i) => (\r\n                                        <option\r\n                                            value={tag}\r\n                                            key={tag + i}\r\n                                        >{tag}</option>\r\n                                    ))}\r\n                                </select>\r\n                                {/* </div>\r\n                                </div> */}\r\n                            </div>\r\n                            <button\r\n                                type=\"submit\"\r\n                            >{tagsToAdd.length > 0 ? \"Submit\" : \"Close\"}</button>\r\n                        </form>\r\n                    ) : (\r\n                            <p className=\"add\" onClick={() => setIsEditing(true)}>+</p>\r\n                        )}\r\n                </div>\r\n                {tags.length > 0 ?\r\n                    (\r\n                        <ul className=\"tags\">\r\n                            {tags.map((tag, i) => (\r\n                                <li\r\n                                    key={docID + i}\r\n                                >{tag}\r\n                                    <div className=\"delete-tag\" onClick={(e) => remove(e, \"tags\")}>\r\n                                        <span>x</span>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )\r\n                    : (\r\n                        <p><em>This recipe has not been tagged yet</em></p>\r\n                    )\r\n                }\r\n                <div className=\"notes-wrapper\">\r\n                    <div className=\"notes\">\r\n                        {notes.length > 0 ? (\r\n                            <ol>\r\n                                {notes.map(note => (\r\n                                    <li\r\n                                        key={note}\r\n                                    >{note}\r\n                                        <div className=\"delete-note\" onClick={(e) => remove(e, \"notes\")}>\r\n                                            <span>x</span>\r\n                                        </div>\r\n                                    </li>\r\n                                ))}\r\n                            </ol>\r\n                        ) : (\r\n                                <p><em>There are no notes for this recipe yet.</em></p>\r\n                            )}\r\n                    </div>\r\n                    <div className=\"add-notes\">\r\n                        <form\r\n                            onSubmit={e => add(e, \"notes\")}\r\n                        >\r\n                            <textarea\r\n                                name=\"notes\"\r\n                                placeholder=\"Add additional notes here.\"\r\n                                rows=\"3\"\r\n                                value={notesToAdd}\r\n                                onChange={e => setNotesToAdd(e.target.value)}\r\n                            />\r\n                            <button type=\"submit\">Add Note</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-top\">\r\n                <img\r\n                    src={imgSrc ? imgSrc : \"./graphics/default_image.jpg\"}\r\n                    onClick={() => setOpen(o => !o)}\r\n                />\r\n                <Popup trigger={<span className=\"delete\"></span>} modal>\r\n                    {close => (\r\n                        <div className=\"delete-modal\">\r\n                            <button className=\"close\" onClick={close}>X</button>\r\n                            <div className=\"header\">Are You Sure that You Want to Delete this Recipe???</div>\r\n                            <button className=\"delete\" onClick={() => deleteEntry(docID)}>Delete this Recipe Entry</button>\r\n                        </div>\r\n                    )}\r\n                </Popup>\r\n            </div>\r\n            <div className=\"card-bottom\">\r\n                <div className=\"title-wrapper\">\r\n                    <h4 onClick={() => setOpen(o => !o)}>{title}</h4>\r\n                    <div className=\"rating-hasMade\">\r\n                        <div className=\"rating\">\r\n                            <StarRatings\r\n                                rating={newRating}\r\n                                starRatedColor=\"#f04a26\"\r\n                                starEmptyColor=\"#808080\"\r\n                                changeRating={ratingChanged}\r\n                                numberOfStars={5}\r\n                                starDimension=\"22px\"\r\n                                starSpacing=\"2px\"\r\n                                name='rating'\r\n                            />\r\n                        </div>\r\n                        <div className=\"has-made\">\r\n                            <input type=\"checkbox\" className=\"check\" name=\"check\"\r\n                                value={hasMade}\r\n                                onChange={() => console.log(\"click\")}\r\n                                checked={hasMade}\r\n                            />\r\n                            <label\r\n                                htmlFor=\"check\"\r\n                                onClick={() => updateItem(docID, hasMade)}\r\n                            >Cooked</label>\r\n                        </div>\r\n                    </div>\r\n                    {/* <p>Author: <strong><em>{author.length ? author : \"No Assigned Author\"}</em></strong></p> */}\r\n                </div>\r\n                <div className=\"link-wrapper\">\r\n                    <div className=\"link\">\r\n                        <a href={url} target=\"_blank\">Recipe Link</a>\r\n                    </div>\r\n                    <span className=\"timestamp\">Saved On: {moment(timestamp).format(\"MMMM Do YYYY\")}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <Popup open={open} closeOnDocumentClick onClose={closeModal}>\r\n                <div className=\"modal recipe-modal\">\r\n                    <div className=\"recipe-modal-central\">\r\n                        <div className=\"recipe-modal-inner\">\r\n                            <button className=\"close\" onClick={closeModal}>X</button>\r\n                            <div className=\"modal-img\">\r\n                                <div className=\"modal-img-back\">\r\n                                    <img\r\n                                        src={imgSrc ? imgSrc : \"./graphics/default_image.jpg\"} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-info\">\r\n                                <div className=\"modal-info-inner\">\r\n                                    <div className=\"modal-info-inner-tabs\">\r\n                                        <ul>\r\n                                            <li className={currentTab === 1 ? \"active\" : \"\"}\r\n                                                onClick={() => setCurrentTab(1)}>\r\n                                                <h4>INFO</h4>\r\n                                            </li>\r\n                                            <li className={currentTab === 2 ? \"active\" : \"\"}\r\n                                                onClick={() => setCurrentTab(2)}>\r\n                                                <h4>TAGS/NOTES</h4>\r\n                                            </li>\r\n                                            <li>\r\n                                                <h4><a href={url} target=\"_blank\">GO TO RECIPE</a></h4>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"modal-info-text\">\r\n                                        {currentTab === 1 ? (\r\n                                            [renderTab1()]\r\n                                        ) : (\r\n                                                [renderTab2()]\r\n                                            )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Popup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Editable = ({\r\n    childRef,\r\n    text,\r\n    type,\r\n    placeholder,\r\n    children,\r\n    parent,\r\n    ...props\r\n}) => {\r\n\r\n    const [isEditing, setEditing] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (childRef && childRef.current && isEditing === true) {\r\n            childRef.current.focus();\r\n        }\r\n    }, [isEditing, childRef]);\r\n\r\n    const handleKeyDown = (e, type) => {\r\n        const { key } = e;\r\n        console.log(key)\r\n        const keys = [\"Escape\", \"Tab\"];\r\n        const enterKey = \"Enter\";\r\n        const allKeys = [...keys, enterKey]; // All keys array\r\n\r\n        if (\r\n            (type === \"textarea\" && keys.indexOf(key) > -1) ||\r\n            (type !== \"textarea\" && allKeys.indexOf(key) > -1)\r\n        ) {\r\n            setEditing(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section {...props}>\r\n            {isEditing ? (\r\n                <div\r\n                    onBlur={() => setEditing(false)}\r\n                    onKeyDown={e => handleKeyDown(e, type)}\r\n                >\r\n                    {children}\r\n                </div>\r\n            ) : (\r\n                    <div\r\n                        onClick={() => setEditing(true)}\r\n                    >\r\n                        {parent === \"options_page\" ? (\r\n                            <p className=\"add\">+</p>\r\n                        ) : (\r\n                                <span>\r\n                                    {text || placeholder}\r\n                                </span>\r\n                            )}\r\n                    </div>\r\n                )}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Editable;","import React, { useState, useRef } from 'react';\r\nimport Editable from \"../components/Editable\";\r\nimport firebase from \"../utils/firebase\";\r\n\r\nconst Card = ({ recipe, url, setRecipe, setIsOverlay, setUrl }) => {\r\n\r\n  const [title, setTitle] = useState(recipe.title);\r\n  const [imgSrc, setImgSrc] = useState(recipe.imgSrc);\r\n  const [description, setDescription] = useState(recipe.description);\r\n  const [author, setAuthor] = useState(recipe.author);\r\n  const [rating, setRating] = useState(0);\r\n  const [tags, setTags] = useState(recipe.tags);\r\n  const [allNotes, setAllNotes] = useState(\"\");\r\n  const [hasMade, setHasMade] = useState(false);\r\n  const inputRef = useRef();\r\n\r\n  const createEntry = () => {\r\n\r\n    let notes;\r\n\r\n    if (allNotes.length > 0) {\r\n      notes = allNotes.split(\"\\n\\n\")\r\n    } else {\r\n      notes = []\r\n    }\r\n\r\n    firebase\r\n      .firestore()\r\n      .collection(\"recipes\")\r\n      .add({\r\n        title,\r\n        imgSrc,\r\n        author,\r\n        rating,\r\n        description,\r\n        timestamp: Date.now(),\r\n        tags,\r\n        hasMade,\r\n        notes,\r\n        url\r\n      })\r\n    setRecipe({})\r\n    setIsOverlay(false)\r\n    setUrl(\"\");\r\n  }\r\n\r\n  const splitTags = tags => {\r\n    let split = tags.split(\",\")\r\n    setTags(split)\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-top\">\r\n        {imgSrc ?\r\n          <img src={imgSrc} />\r\n          :\r\n          <Editable\r\n            text={imgSrc}\r\n            placeholder='Right click on image, and click \"copy image address\". Paste address here.'\r\n            childRef={inputRef}\r\n            type=\"textarea\"\r\n          >\r\n            <textarea\r\n              ref={inputRef}\r\n              name=\"image source\"\r\n              placeholder='Right click on image, and click \"copy image address\". Paste address here.'\r\n              rows=\"5\"\r\n              value={imgSrc}\r\n              onChange={e => setImgSrc(e.target.value)}\r\n            />\r\n          </Editable>\r\n        }\r\n      </div>\r\n      <div className=\"card-bottom\">\r\n        <div className=\"title-wrapper\">\r\n          <h3>Title:</h3>\r\n          <div>\r\n            <label htmlFor=\"has-made\">Has Made:</label>\r\n            <input type=\"checkbox\" id=\"has-made\" name=\"has-made\" value={hasMade} onClick={() => setHasMade(!hasMade)} />\r\n          </div>\r\n        </div>\r\n        <Editable\r\n          text={title}\r\n          placeholder=\"Click Here to Add Recipe Title\"\r\n          childRef={inputRef}\r\n          type=\"textarea\"\r\n        >\r\n          <textarea\r\n            ref={inputRef}\r\n            name=\"title\"\r\n            placeholder=\"Click Here to Add Recipe Title\"\r\n            rows=\"5\"\r\n            value={title}\r\n            onChange={e => setTitle(e.target.value)}\r\n          />\r\n        </Editable>\r\n        <h3>Author:</h3>\r\n        <Editable\r\n          text={author}\r\n          placeholder=\"Click Here to Add Recipe Author\"\r\n          childRef={inputRef}\r\n          type=\"textarea\"\r\n        >\r\n          <textarea\r\n            ref={inputRef}\r\n            name=\"author\"\r\n            placeholder=\"Click Here to Add Recipe Author\"\r\n            rows=\"5\"\r\n            value={author}\r\n            onChange={e => setAuthor(e.target.value)}\r\n          />\r\n        </Editable>\r\n        <div className=\"description\">\r\n          <h3>Description:</h3>\r\n          <Editable\r\n            text={description}\r\n            placeholder=\"Click Here to Add Recipe Description\"\r\n            childRef={inputRef}\r\n            type=\"textarea\"\r\n          >\r\n            <textarea\r\n              ref={inputRef}\r\n              name=\"description\"\r\n              placeholder=\"Click Here to Add Recipe Description\"\r\n              rows=\"5\"\r\n              value={description}\r\n              onChange={e => setDescription(e.target.value)}\r\n            />\r\n          </Editable>\r\n        </div>\r\n        <div>\r\n          <h3>Tagged As:</h3>\r\n          <Editable\r\n            text={tags.join(\",\")}\r\n            placeholder=\"Click Here to Add Recipe Tags\"\r\n            childRef={inputRef}\r\n            type=\"textarea\"\r\n          >\r\n            <textarea\r\n              ref={inputRef}\r\n              name=\"tags\"\r\n              placeholder=\"Enter ',' separated tags here\"\r\n              rows=\"5\"\r\n              value={tags.join(\",\")}\r\n              onChange={e => splitTags(e.target.value)}\r\n            />\r\n          </Editable>\r\n        </div>\r\n        <div>\r\n          <h3>Additional Notes:</h3>\r\n          <Editable\r\n            text={allNotes}\r\n            placeholder=\"Click Here to Add Additional Notes\"\r\n            childRef={inputRef}\r\n            type=\"textarea\"\r\n          >\r\n            <textarea\r\n              ref={inputRef}\r\n              name=\"notes\"\r\n              placeholder=\"Add additional notes here.\"\r\n              rows=\"10\"\r\n              value={allNotes}\r\n              onChange={e => setAllNotes(e.target.value)}\r\n            />\r\n          </Editable>\r\n        </div>\r\n        <div className=\"link\">\r\n          <button onClick={createEntry} >Create Entry</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React, { useState, useEffect } from 'react';\nimport RecipeCard from './components/RecipeCard';\nimport RecipeEntry from \"./components/RecipeEntry\";\nimport './App.scss';\nimport firebase from \"./utils/firebase\";\n\nimport socketIOClient from \"socket.io-client\";\n\nconst ENDPOINT = \"https://still-hamlet-76887.herokuapp.com/?EIO=3&transport=polling\";\n// const ENDPOINT = \"http://localhost:4001/\"\n\nfunction App() {\n\n  const [allRecipes, setAllRecipes] = useState([]);\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  const [tagsList, setTagsList] = useState([])\n  const [sortBy, setSortBy] = useState(\"TIME_DESC\");\n  const [query, setQuery] = useState(\"\");\n  const [loadClient, setLoadClient] = useState(true);\n  const [url, setUrl] = useState(\"\");\n  const [isOverlay, setIsOverlay] = useState(false);\n  const [recipe, setRecipe] = useState({});\n\n  useEffect(() => {\n\n    const recipesRef = firebase\n      .firestore()\n      .collection(\"recipes\")\n\n    let unsubscribe;\n\n    unsubscribe = recipesRef\n      .orderBy(sortOptions[sortBy].column, sortOptions[sortBy].direction)\n      .onSnapshot((snapshot) => {\n        const newRecipes = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data()\n        }))\n\n        setAllRecipes(newRecipes)\n        setFilteredRecipes(newRecipes)\n        setQuery(\"\")\n      })\n\n    return () => unsubscribe()\n  }, [sortBy])\n\n  useEffect(() => {\n    let arr = []\n    allRecipes.forEach(recipe => {\n      let tags = recipe.tags\n      tags.forEach(tag => {\n        let cleanedTag = tag.toLowerCase().trim()\n        if (!arr.includes(cleanedTag)) {\n          arr.push(cleanedTag)\n        }\n      })\n    })\n    setTagsList(arr.sort())\n  }, [allRecipes])\n\n  useEffect(() => {\n    const searchAllRegex = query && new RegExp(`${query}`, \"gi\");\n    const result = allRecipes.filter(\n      recipe =>\n        (!searchAllRegex || searchAllRegex.test(recipe.title) + searchAllRegex.test(recipe.author) + searchAllRegex.test(recipe.tags))\n    );\n    setFilteredRecipes(result);\n  }, [query])\n\n  const scrapeData = () => {\n    setIsOverlay(true);\n    const socket = socketIOClient(ENDPOINT);\n    socket.on(\"connect\", function () {\n      socket.emit(\"from_client\", url);\n    });\n\n    socket.on(\"from_server\", data => {\n      console.log('Connection to server established.', data);\n      if (data === null) {\n        setRecipe({\n          title: \"\",\n          imgSrc: \"\",\n          author: \"\",\n          description: \"\",\n          tags: [],\n          notes: []\n        })\n      } else {\n        setRecipe(data);\n      }\n    });\n\n    // CLEAN UP THE EFFECT\n    return () => socket.disconnect();\n  }\n\n  const sortOptions = {\n    \"TIME_ASC\": { column: \"timestamp\", direction: \"asc\" },\n    \"TIME_DESC\": { column: \"timestamp\", direction: \"desc\" },\n    \"TITLE_ASC\": { column: \"title\", direction: \"asc\" },\n    \"TITLE_DESC\": { column: \"title\", direction: \"desc\" },\n    \"COOKED\": { column: \"hasMade\", direction: \"desc\" },\n    \"NOT_COOKED\": { column: \"hasMade\", direction: \"asc\" }\n  }\n\n  const disconnect = () => {\n    setIsOverlay(false);\n    setRecipe({});\n    setUrl(\"\");\n  }\n\n  const connect = (e) => {\n    e.preventDefault();\n    scrapeData();\n  }\n\n  return (\n    <div id=\"client_page\">\n      <div className=\"overlay\"\n        style={isOverlay && url.length ? { display: \"block\" } : { display: \"none\" }}\n      >\n        {loadClient && url && isOverlay ?\n          (<div className=\"entry_popup\">\n            {Object.keys(recipe).length ?\n              <>\n                <header className=\"popup-header\">\n                  <div className=\"back\">\n                    <button onClick={() => disconnect()}></button>\n                  </div>\n                  <h3><em>Example Recipe Entry:</em></h3>\n                </header>\n                <RecipeEntry\n                  recipe={recipe}\n                  key={recipe.id}\n                  url={url}\n                  setRecipe={setRecipe}\n                  setIsOverlay={setIsOverlay}\n                  setUrl={setUrl}\n                />\n              </>\n              :\n              <>\n                <div className=\"dog-loader\">\n                  <div className=\"dog-head\">\n                    <img src=\"http://www.clker.com/cliparts/j/3/Z/Y/D/5/dog-head-md.png\" />\n                  </div>\n                  <div className=\"dog-body\">\n                  </div>\n                </div>\n                <p className=\"dog-loader-p\"><em>Scraping data...</em></p>\n              </>\n            }\n          </div>)\n          :\n          <></>\n        }\n      </div>\n      <header className=\"page-header\">\n        <div className=\"titles\">\n          <h1>Dog-Ear</h1>\n          <h2>Recipe Repository</h2>\n        </div>\n        <div className=\"dog-image\">\n          <img src=\"./graphics/dog.png\" alt=\"Woof woof\" />\n        </div>\n      </header>\n      <div className=\"interaction-wrapper\">\n        <div className=\"search-sort\">\n          <div className=\"dropdown\">\n            <select value={sortBy} onChange={e => setSortBy(e.currentTarget.value)}>\n              <option value=\"TIME_DESC\">Newest</option>\n              <option value=\"TIME_ASC\">Oldest</option>\n              <option value=\"TITLE_ASC\">Title A-Z</option>\n              <option value=\"TITLE_DESC\">Title Z-A</option>\n              <option value=\"COOKED\">Has Been Cooked</option>\n              <option value=\"NOT_COOKED\">Has NOT Been Cooked</option>\n            </select>\n          </div>\n          <div className=\"search-wrapper\">\n            <div className=\"search\">\n              <input type=\"search\" placeholder=\"Search\" value={query} onChange={e => setQuery(e.target.value)} />\n              <span\n                className=\"cancel\"\n                onClick={() => setQuery(\"\")}>x</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"scrape-wrapper\">\n          <div className=\"scrape\">\n            <form onSubmit={e => connect(e)}>\n              <label htmlFor=\"#scrape-input\">Create New Recipe Entry:</label>\n              <input type=\"text\"\n                className=\"scrape-text\"\n                id=\"scrape-input\"\n                placeholder=\"Paste URL Here\"\n                value={url} onChange={e => setUrl(e.target.value)}\n              />\n              <input className=\"scrape-submit\"\n                type=\"submit\"\n                value=\"Submit\"\n                disabled={url.length ? false : true} />\n            </form>\n          </div>\n        </div>\n      </div>\n      <div className=\"card-container\">\n        {filteredRecipes.map((recipe) => (\n          <RecipeCard\n            key={recipe.id}\n            docID={recipe.id}\n            title={recipe.title}\n            imgSrc={recipe.imgSrc}\n            author={recipe.author}\n            rating={recipe.rating}\n            description={recipe.description}\n            timestamp={recipe.timestamp}\n            hasMade={recipe.hasMade}\n            tags={recipe.tags}\n            tagsList={tagsList}\n            notes={recipe.notes}\n            url={recipe.url}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}