{"version":3,"sources":["utils/firebase.js","helpers/functions.js","components/RecipeCard.js","components/Editable.js","components/RecipeEntry.js","App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","reference","firestore","collection","addItems","id","field","items","doc","update","FieldValue","arrayUnion","removeItems","arrayRemove","Card","docID","title","imgSrc","author","rating","description","timestamp","hasMade","notes","tags","url","useState","tagsToAdd","setTagsToAdd","notesToAdd","setNotesToAdd","isEditing","setIsEditing","open","setOpen","currentTab","setCurrentTab","closeModal","add","e","preventDefault","newTags","length","split","forEach","tag","note","remove","itemToRemove","target","closest","textContent","slice","ratingChanged","updateRating","className","src","onClick","o","trigger","modal","close","delete","href","moment","format","closeOnDocumentClick","onClose","size","value","isHalf","activeColor","onChange","type","name","console","log","checked","htmlFor","boolean","lines","more","less","anchorClass","expanded","width","onSubmit","placeholder","rows","map","i","Editable","childRef","text","children","parent","props","setEditing","useEffect","current","focus","onBlur","onKeyDown","key","keys","allKeys","indexOf","handleKeyDown","recipe","setRecipe","setIsOverlay","setUrl","setTitle","setImgSrc","setDescription","setAuthor","setTags","allNotes","setAllNotes","setHasMade","inputRef","useRef","ref","join","splitTags","Date","now","App","allRecipes","setAllRecipes","filteredRecipes","setFilteredRecipes","sortBy","setSortBy","query","setQuery","loadClient","isOverlay","unsubscribe","recipesRef","orderBy","sortOptions","column","direction","onSnapshot","snapshot","newRecipes","docs","data","searchAllRegex","RegExp","result","filter","test","connect","socket","socketIOClient","on","emit","scrapeData","style","display","Object","class","RecipeEntry","alt","currentTarget","disabled","RecipeCard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b469a7ea.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\n// Firebase Config\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD9SrA01N_4vLdkCLrddWlCGQl_ylIszaI\",\r\n    authDomain: \"dog-ear-recipe-extension-4bfbf.firebaseapp.com\",\r\n    databaseURL: \"https://dog-ear-recipe-extension-4bfbf.firebaseio.com\",\r\n    projectId: \"dog-ear-recipe-extension-4bfbf\",\r\n    storageBucket: \"dog-ear-recipe-extension-4bfbf.appspot.com\",\r\n    messagingSenderId: \"147277096133\",\r\n    appId: \"1:147277096133:web:6e74a347d42254b231bcac\",\r\n    measurementId: \"G-5GEY75XZWH\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import firebase from \"../utils/firebase\";\r\n\r\nconst reference = firebase\r\n    .firestore()\r\n    .collection(\"recipes\")\r\n\r\nexport function create(args) {\r\n    reference\r\n        .add(...args)\r\n}\r\n\r\nexport function deleteEntry(id) {\r\n    reference\r\n        .doc(id)\r\n        .delete()\r\n}\r\n\r\nexport function addItems(id, field, items) {\r\n    switch (field) {\r\n        case \"tags\":\r\n            reference\r\n                .doc(id)\r\n                .update({\r\n                    \"tags\": firebase.firestore.FieldValue.arrayUnion(items)\r\n                })\r\n            break;\r\n        case \"notes\":\r\n            reference\r\n                .doc(id)\r\n                .update({\r\n                    \"notes\": firebase.firestore.FieldValue.arrayUnion(items)\r\n                })\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function removeItems(id, field, items) {\r\n    switch (field) {\r\n        case \"tags\":\r\n            reference\r\n                .doc(id)\r\n                .update({\r\n                    \"tags\": firebase.firestore.FieldValue.arrayRemove(items)\r\n                })\r\n            break;\r\n        case \"notes\":\r\n            reference\r\n                .doc(id)\r\n                .update({\r\n                    \"notes\": firebase.firestore.FieldValue.arrayRemove(items)\r\n                })\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function updateItem(id, boolean) {\r\n    reference\r\n        .doc(id)\r\n        .update({\r\n            \"hasMade\": !boolean\r\n        })\r\n}\r\n\r\nexport function updateRating(id, rating) {\r\n    reference\r\n        .doc(id)\r\n        .update({\r\n            \"rating\": rating\r\n        })\r\n}\r\n","import React, { useState } from 'react';\r\nimport moment from \"moment\";\r\nimport ShowMoreText from 'react-show-more-text';\r\nimport Popup from 'reactjs-popup';\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { addItems, deleteEntry, removeItems, updateItem, updateRating } from \"../helpers/functions\";\r\n\r\nconst Card = ({ docID, title, imgSrc, author, rating, description, timestamp, hasMade, notes, tags, url }) => {\r\n\r\n    const [tagsToAdd, setTagsToAdd] = useState(\"\");\r\n    const [notesToAdd, setNotesToAdd] = useState(\"\");\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [currentTab, setCurrentTab] = useState(1)\r\n    const closeModal = () => setOpen(false);\r\n\r\n    const add = (e, field) => {\r\n        e.preventDefault();\r\n        setIsEditing(false);\r\n\r\n        switch (field) {\r\n            case \"tags\":\r\n                let newTags = tagsToAdd;\r\n                if (newTags.length) {\r\n                    if (newTags.length === 1) {\r\n                        addItems(docID, \"tags\", newTags);\r\n                    } else {\r\n                        newTags = newTags.split(\",\")\r\n                        newTags.forEach(tag => {\r\n                            addItems(docID, \"tags\", tag);\r\n                        });\r\n                    }\r\n                    setTagsToAdd(\"\");\r\n                }\r\n                break;\r\n            case \"notes\":\r\n                let newNotes = notesToAdd\r\n                if (newNotes.length) {\r\n                    let newNotes = notesToAdd.split(\"\\n\\n\");\r\n                    newNotes.forEach(note => {\r\n                        addItems(docID, \"notes\", note);\r\n                    });\r\n                    setNotesToAdd(\"\");\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const remove = (e, field) => {\r\n        e.preventDefault();\r\n        let itemToRemove = e.target.closest(\"li\").textContent.slice(0, -1);\r\n\r\n        switch (field) {\r\n            case \"tags\":\r\n                removeItems(docID, \"tags\", itemToRemove)\r\n                break;\r\n            case \"notes\":\r\n                removeItems(docID, \"notes\", itemToRemove)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const ratingChanged = (rating) => {\r\n        updateRating(docID, rating)\r\n    }\r\n\r\n    const renderTab1 = () => {\r\n        return (\r\n            <>\r\n                <div className=\"title\">\r\n                    <h2>{title}</h2>\r\n                </div>\r\n                <div className=\"title\">\r\n                    <p>Author: <strong><em>{author.length ? author : \"No Assigned Author\"}</em></strong></p>\r\n                </div>\r\n                <div className=\"rating-hasMade\">\r\n                    <div className=\"rating\">\r\n                        <ReactStars\r\n                            size={30}\r\n                            value={rating}\r\n                            isHalf={true}\r\n                            activeColor=\"#f04a26\"\r\n                            onChange={ratingChanged}\r\n                        />\r\n                    </div>\r\n                    <div className=\"has-made\">\r\n                        <input type=\"checkbox\" className=\"check\" name=\"check\"\r\n                            value={hasMade}\r\n                            onChange={() => console.log(\"click\")}\r\n                            checked={hasMade}\r\n                        />\r\n                        <label\r\n                            htmlFor=\"check\"\r\n                            onClick={() => updateItem(docID, hasMade)}\r\n                        >Cooked</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"description\">\r\n                    <ShowMoreText\r\n                        lines={5}\r\n                        more='Show more'\r\n                        less='Show less'\r\n                        anchorClass='description-anchor'\r\n                        expanded={false}\r\n                        width={0}\r\n                    >\r\n                        {description}\r\n                    </ShowMoreText>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const renderTab2 = () => {\r\n        return (\r\n            <div className=\"tags-wrapper\">\r\n                <div className=\"tags-header\">\r\n                    <p><strong>Tagged As:</strong></p>\r\n                    {isEditing ? (\r\n                        <form\r\n                            onSubmit={e => add(e, \"tags\")}\r\n                        >\r\n                            <textarea\r\n                                name=\"tags\"\r\n                                placeholder=\"Enter ',' delimited tags\"\r\n                                rows=\"2\"\r\n                                value={tagsToAdd}\r\n                                onChange={e => setTagsToAdd(e.target.value)}\r\n                            />\r\n                            <button\r\n                                type=\"submit\"\r\n                            >{tagsToAdd.length > 0 ? \"Submit\" : \"Close\"}</button>\r\n                        </form>\r\n                    ) : (\r\n                            <p className=\"add\" onClick={() => setIsEditing(true)}>+</p>\r\n                        )}\r\n                </div>\r\n                {tags.length > 0 ?\r\n                    (\r\n                        <ul className=\"tags\">\r\n                            {tags.map((tag, i) => (\r\n                                <li\r\n                                    key={docID + i}\r\n                                >{tag}\r\n                                    <div className=\"delete-tag\" onClick={(e) => remove(e, \"tags\")}>\r\n                                        <span>x</span>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )\r\n                    : (\r\n                        <p><em>This recipe has not been tagged yet</em></p>\r\n                    )\r\n                }\r\n                <div className=\"notes-wrapper\">\r\n                    <div className=\"notes\">\r\n                        {notes.length > 0 ? (\r\n                            <ol>\r\n                                {notes.map(note => (\r\n                                    <li\r\n                                        key={note}\r\n                                    >{note}\r\n                                        <div className=\"delete-note\" onClick={(e) => remove(e, \"notes\")}>\r\n                                            <span>x</span>\r\n                                        </div>\r\n                                    </li>\r\n                                ))}\r\n                            </ol>\r\n                        ) : (\r\n                                <p><em>There are no notes for this recipe yet.</em></p>\r\n                            )}\r\n                    </div>\r\n                    <div className=\"add-notes\">\r\n                        <form\r\n                            onSubmit={e => add(e, \"notes\")}\r\n                        >\r\n                            <textarea\r\n                                name=\"notes\"\r\n                                placeholder=\"Add additional notes here.\"\r\n                                rows=\"3\"\r\n                                value={notesToAdd}\r\n                                onChange={e => setNotesToAdd(e.target.value)}\r\n                            />\r\n                            <button type=\"submit\">Add Note</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-top\">\r\n                <img\r\n                    src={imgSrc ? imgSrc : \"./graphics/default_image.jpg\"}\r\n                    onClick={() => setOpen(o => !o)}\r\n                />\r\n                <Popup trigger={<span className=\"delete\"></span>} modal>\r\n                    {close => (\r\n                        <div className=\"delete-modal\">\r\n                            <button className=\"close\" onClick={close}>X</button>\r\n                            <div className=\"header\">Are You Sure that You Want to Delete this Recipe???</div>\r\n                            <button className=\"delete\" onClick={() => deleteEntry(docID)}>Delete this Recipe Entry</button>\r\n                        </div>\r\n                    )}\r\n                </Popup>\r\n            </div>\r\n            <div className=\"card-bottom\">\r\n                <div className=\"title-wrapper\">\r\n                    <h4 onClick={() => setOpen(o => !o)}>{title}</h4>\r\n                    <p>Author: <strong><em>{author.length ? author : \"No Assigned Author\"}</em></strong></p>\r\n                </div>\r\n                <div className=\"link-wrapper\">\r\n                    <div className=\"link\">\r\n                        <a href={url} target=\"_blank\">Recipe Link</a>\r\n                    </div>\r\n                    <span className=\"timestamp\">Saved On: {moment(timestamp).format(\"MMMM Do YYYY\")}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <Popup open={open} closeOnDocumentClick onClose={closeModal}>\r\n                <div className=\"modal recipe-modal\">\r\n                    <div className=\"recipe-modal-central\">\r\n                        <div className=\"recipe-modal-inner\">\r\n                            <button className=\"close\" onClick={closeModal}>X</button>\r\n                            <div className=\"modal-img\">\r\n                                <div className=\"modal-img-back\">\r\n                                    <img\r\n                                        src={imgSrc ? imgSrc : \"./graphics/default_image.jpg\"} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-info\">\r\n                                <div className=\"modal-info-inner\">\r\n                                    <div className=\"modal-info-inner-tabs\">\r\n                                        <ul>\r\n                                            <li className={currentTab === 1 ? \"active\" : \"\"}\r\n                                                onClick={() => setCurrentTab(1)}>\r\n                                                <h4>INFO</h4>\r\n                                            </li>\r\n                                            <li className={currentTab === 2 ? \"active\" : \"\"}\r\n                                                onClick={() => setCurrentTab(2)}>\r\n                                                <h4>TAGS/NOTES</h4>\r\n                                            </li>\r\n                                            <li>\r\n                                                <h4><a href={url} target=\"_blank\">GO TO RECIPE</a></h4>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"modal-info-text\">\r\n                                        {currentTab === 1 ? (\r\n                                            [renderTab1()]\r\n                                        ) : (\r\n                                                [renderTab2()]\r\n                                            )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Popup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Editable = ({\r\n    childRef,\r\n    text,\r\n    type,\r\n    placeholder,\r\n    children,\r\n    parent,\r\n    ...props\r\n}) => {\r\n\r\n    const [isEditing, setEditing] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (childRef && childRef.current && isEditing === true) {\r\n            childRef.current.focus();\r\n        }\r\n    }, [isEditing, childRef]);\r\n\r\n    const handleKeyDown = (e, type) => {\r\n        const { key } = e;\r\n        console.log(key)\r\n        const keys = [\"Escape\", \"Tab\"];\r\n        const enterKey = \"Enter\";\r\n        const allKeys = [...keys, enterKey]; // All keys array\r\n\r\n        if (\r\n            (type === \"textarea\" && keys.indexOf(key) > -1) ||\r\n            (type !== \"textarea\" && allKeys.indexOf(key) > -1)\r\n        ) {\r\n            setEditing(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section {...props}>\r\n            {isEditing ? (\r\n                <div\r\n                    onBlur={() => setEditing(false)}\r\n                    onKeyDown={e => handleKeyDown(e, type)}\r\n                >\r\n                    {children}\r\n                </div>\r\n            ) : (\r\n                    <div\r\n                        onClick={() => setEditing(true)}\r\n                    >\r\n                        {parent === \"options_page\" ? (\r\n                            <p className=\"add\">+</p>\r\n                        ) : (\r\n                                <span>\r\n                                    {text || placeholder}\r\n                                </span>\r\n                            )}\r\n                    </div>\r\n                )}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Editable;","import React, { useState, useRef } from 'react';\r\nimport Editable from \"../components/Editable\";\r\nimport firebase from \"../utils/firebase\";\r\n\r\nconst Card = ({ recipe, url, setRecipe, setIsOverlay, setUrl }) => {\r\n\r\n  const [title, setTitle] = useState(recipe.title);\r\n  const [imgSrc, setImgSrc] = useState(recipe.imgSrc);\r\n  const [description, setDescription] = useState(recipe.description);\r\n  const [author, setAuthor] = useState(recipe.author);\r\n  const [rating, setRating] = useState(0);\r\n  const [tags, setTags] = useState(recipe.tags);\r\n  const [allNotes, setAllNotes] = useState(\"\");\r\n  const [hasMade, setHasMade] = useState(false);\r\n  const inputRef = useRef();\r\n\r\n  const createEntry = () => {\r\n\r\n    let notes;\r\n\r\n    if (allNotes.length > 0) {\r\n      notes = allNotes.split(\"\\n\\n\")\r\n    } else {\r\n      notes = []\r\n    }\r\n\r\n    firebase\r\n      .firestore()\r\n      .collection(\"recipes\")\r\n      .add({\r\n        title,\r\n        imgSrc,\r\n        author,\r\n        rating,\r\n        description,\r\n        timestamp: Date.now(),\r\n        tags,\r\n        hasMade,\r\n        notes,\r\n        url\r\n      })\r\n    setRecipe({})\r\n    setIsOverlay(false)\r\n    setUrl(\"\");\r\n  }\r\n\r\n  const splitTags = tags => {\r\n    let split = tags.split(\",\")\r\n    setTags(split)\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-top\">\r\n        {imgSrc ?\r\n          <img src={imgSrc} />\r\n          :\r\n          <Editable\r\n            text={imgSrc}\r\n            placeholder='Right click on image, and click \"copy image address\". Paste address here.'\r\n            childRef={inputRef}\r\n            type=\"textarea\"\r\n          >\r\n            <textarea\r\n              ref={inputRef}\r\n              name=\"image source\"\r\n              placeholder='Right click on image, and click \"copy image address\". Paste address here.'\r\n              rows=\"5\"\r\n              value={imgSrc}\r\n              onChange={e => setImgSrc(e.target.value)}\r\n            />\r\n          </Editable>\r\n        }\r\n      </div>\r\n      <div className=\"card-bottom\">\r\n        <div className=\"title-wrapper\">\r\n          <h3>Title:</h3>\r\n          <div>\r\n            <label htmlFor=\"has-made\">Has Made:</label>\r\n            <input type=\"checkbox\" id=\"has-made\" name=\"has-made\" value={hasMade} onClick={() => setHasMade(!hasMade)} />\r\n          </div>\r\n        </div>\r\n        <Editable\r\n          text={title}\r\n          placeholder=\"Click Here to Add Recipe Title\"\r\n          childRef={inputRef}\r\n          type=\"textarea\"\r\n        >\r\n          <textarea\r\n            ref={inputRef}\r\n            name=\"title\"\r\n            placeholder=\"Click Here to Add Recipe Title\"\r\n            rows=\"5\"\r\n            value={title}\r\n            onChange={e => setTitle(e.target.value)}\r\n          />\r\n        </Editable>\r\n        <h3>Author:</h3>\r\n        <Editable\r\n          text={author}\r\n          placeholder=\"Click Here to Add Recipe Author\"\r\n          childRef={inputRef}\r\n          type=\"textarea\"\r\n        >\r\n          <textarea\r\n            ref={inputRef}\r\n            name=\"author\"\r\n            placeholder=\"Click Here to Add Recipe Author\"\r\n            rows=\"5\"\r\n            value={author}\r\n            onChange={e => setAuthor(e.target.value)}\r\n          />\r\n        </Editable>\r\n        <div className=\"description\">\r\n          <h3>Description:</h3>\r\n          <Editable\r\n            text={description}\r\n            placeholder=\"Click Here to Add Recipe Description\"\r\n            childRef={inputRef}\r\n            type=\"textarea\"\r\n          >\r\n            <textarea\r\n              ref={inputRef}\r\n              name=\"description\"\r\n              placeholder=\"Click Here to Add Recipe Description\"\r\n              rows=\"5\"\r\n              value={description}\r\n              onChange={e => setDescription(e.target.value)}\r\n            />\r\n          </Editable>\r\n        </div>\r\n        <div>\r\n          <h3>Tagged As:</h3>\r\n          <Editable\r\n            text={tags.join(\",\")}\r\n            placeholder=\"Click Here to Add Recipe Tags\"\r\n            childRef={inputRef}\r\n            type=\"textarea\"\r\n          >\r\n            <textarea\r\n              ref={inputRef}\r\n              name=\"tags\"\r\n              placeholder=\"Enter ',' separated tags here\"\r\n              rows=\"5\"\r\n              value={tags.join(\",\")}\r\n              onChange={e => splitTags(e.target.value)}\r\n            />\r\n          </Editable>\r\n        </div>\r\n        <div>\r\n          <h3>Additional Notes:</h3>\r\n          <Editable\r\n            text={allNotes}\r\n            placeholder=\"Click Here to Add Additional Notes\"\r\n            childRef={inputRef}\r\n            type=\"textarea\"\r\n          >\r\n            <textarea\r\n              ref={inputRef}\r\n              name=\"notes\"\r\n              placeholder=\"Add additional notes here.\"\r\n              rows=\"10\"\r\n              value={allNotes}\r\n              onChange={e => setAllNotes(e.target.value)}\r\n            />\r\n          </Editable>\r\n        </div>\r\n        <div className=\"link\">\r\n          <button onClick={createEntry} >Create Entry</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React, { useState, useEffect } from 'react';\nimport RecipeCard from './components/RecipeCard';\nimport RecipeEntry from \"./components/RecipeEntry\";\nimport './App.scss';\nimport firebase from \"./utils/firebase\";\n\nimport socketIOClient from \"socket.io-client\";\n\nconst ENDPOINT = \"https://still-hamlet-76887.herokuapp.com/?EIO=3&transport=polling\";\n// const ENDPOINT = \"http://localhost:4001/\"\n\nfunction App() {\n\n  const [allRecipes, setAllRecipes] = useState([]);\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  const [sortBy, setSortBy] = useState(\"TIME_DESC\");\n  const [query, setQuery] = useState(\"\");\n  const [loadClient, setLoadClient] = useState(true);\n  const [url, setUrl] = useState(\"\");\n  const [isOverlay, setIsOverlay] = useState(false);\n  const [recipe, setRecipe] = useState({});\n\n  useEffect(() => {\n\n    const recipesRef = firebase\n      .firestore()\n      .collection(\"recipes\")\n\n    let unsubscribe;\n\n    unsubscribe = recipesRef\n      .orderBy(sortOptions[sortBy].column, sortOptions[sortBy].direction)\n      .onSnapshot((snapshot) => {\n        const newRecipes = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data()\n        }))\n\n        setAllRecipes(newRecipes)\n        setFilteredRecipes(newRecipes)\n        setQuery(\"\")\n      })\n\n    return () => unsubscribe()\n  }, [sortBy])\n\n  useEffect(() => {\n    const searchAllRegex = query && new RegExp(`${query}`, \"gi\");\n    const result = allRecipes.filter(\n      recipe =>\n        (!searchAllRegex || searchAllRegex.test(recipe.title) + searchAllRegex.test(recipe.author) + searchAllRegex.test(recipe.tags))\n    );\n    setFilteredRecipes(result);\n  }, [query])\n\n  const scrapeData = () => {\n    setIsOverlay(true)\n    const socket = socketIOClient(ENDPOINT);\n    socket.on(\"connect\", function () {\n      socket.emit(\"from_client\", url);\n    });\n\n    socket.on(\"from_server\", data => {\n      console.log('Connection to server established.', data);\n      if (data === null) {\n        setRecipe({\n          title: \"\",\n          imgSrc: \"\",\n          author: \"\",\n          description: \"\",\n          tags: [],\n          notes: []\n        })\n      } else {\n        setRecipe(data);\n      }\n    });\n\n    // CLEAN UP THE EFFECT\n    return () => socket.disconnect();\n  }\n\n  const sortOptions = {\n    \"TIME_ASC\": { column: \"timestamp\", direction: \"asc\" },\n    \"TIME_DESC\": { column: \"timestamp\", direction: \"desc\" },\n    \"TITLE_ASC\": { column: \"title\", direction: \"asc\" },\n    \"TITLE_DESC\": { column: \"title\", direction: \"desc\" },\n    \"COOKED\": { column: \"hasMade\", direction: \"desc\" },\n    \"NOT_COOKED\": { column: \"hasMade\", direction: \"asc\" }\n  }\n\n  const disconnect = () => {\n    setIsOverlay(false);\n    setRecipe({});\n    setUrl(\"\");\n  }\n\n  const connect = (e) => {\n    e.preventDefault();\n    scrapeData();\n  }\n\n  return (\n    <div id=\"client_page\">\n      <div className=\"overlay\"\n        style={isOverlay && url.length ? { display: \"block\" } : { display: \"none\" }}\n      >\n        {loadClient && url && isOverlay ?\n          (<div className=\"entry_popup\">\n            {Object.keys(recipe).length ?\n              <>\n                <header class=\"popup-header\">\n                  <div className=\"back\">\n                    <button onClick={() => disconnect()}></button>\n                  </div>\n                  <h3><em>Example Recipe Entry:</em></h3>\n                </header>\n                <RecipeEntry\n                  recipe={recipe}\n                  key={recipe.id}\n                  url={url}\n                  setRecipe={setRecipe}\n                  setIsOverlay={setIsOverlay}\n                  setUrl={setUrl}\n                />\n              </>\n              :\n              <>\n                <div className=\"dog-loader\">\n                  <div className=\"dog-head\">\n                    <img src=\"http://www.clker.com/cliparts/j/3/Z/Y/D/5/dog-head-md.png\" />\n                  </div>\n                  <div className=\"dog-body\">\n                  </div>\n                </div>\n                <p className=\"dog-loader-p\"><em>Scraping data...</em></p>\n              </>\n            }\n          </div>)\n          :\n          <></>\n        }\n      </div>\n      <header class=\"page-header\">\n        <div className=\"titles\">\n          <h1>Dog-Ear</h1>\n          <h2>Recipe Repository</h2>\n        </div>\n        <div className=\"dog-image\">\n          <img src=\"./graphics/dog.png\" alt=\"Woof woof\" />\n        </div>\n      </header>\n      <div className=\"interaction-wrapper\">\n        <div className=\"search-sort\">\n          <div className=\"dropdown\">\n            <select value={sortBy} onChange={e => setSortBy(e.currentTarget.value)}>\n              <option value=\"TIME_DESC\">Newest</option>\n              <option value=\"TIME_ASC\">Oldest</option>\n              <option value=\"TITLE_ASC\">Title A-Z</option>\n              <option value=\"TITLE_DESC\">Title Z-A</option>\n              <option value=\"COOKED\">Has Been Cooked</option>\n              <option value=\"NOT_COOKED\">Has NOT Been Cooked</option>\n            </select>\n          </div>\n          <div className=\"search-wrapper\">\n            <div className=\"search\">\n              <input type=\"search\" placeholder=\"Search\" value={query} onChange={e => setQuery(e.target.value)} />\n              <span\n                className=\"cancel\"\n                onClick={() => setQuery(\"\")}>x</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"scrape-wrapper\">\n          <div className=\"scrape\">\n            <form onSubmit={e => connect(e)}>\n              <label htmlFor=\"#scrape-input\">Create New Recipe Entry:</label>\n              <input type=\"text\"\n                className=\"scrape-text\"\n                id=\"scrape-input\"\n                placeholder=\"Paste URL Here\"\n                value={url} onChange={e => setUrl(e.target.value)}\n              />\n              <input className=\"scrape-submit\"\n                type=\"submit\"\n                value=\"Submit\"\n                disabled={url.length ? false : true} />\n            </form>\n          </div>\n        </div>\n      </div>\n      <div className=\"card-container\">\n        {filteredRecipes.map((recipe) => (\n          <RecipeCard\n            key={recipe.id}\n            docID={recipe.id}\n            title={recipe.title}\n            imgSrc={recipe.imgSrc}\n            author={recipe.author}\n            rating={recipe.rating}\n            description={recipe.description}\n            timestamp={recipe.timestamp}\n            hasMade={recipe.hasMade}\n            tags={recipe.tags}\n            notes={recipe.notes}\n            url={recipe.url}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}